@model PersonalFinances.Models.ViewModels.MovementViewModel

@{
    ViewBag.Title = "New movement";

    List<SelectListItem> movementTypeComboBox = new List<SelectListItem>()
    {
        new SelectListItem { Text = "Credit", Value = "C" },
        new SelectListItem { Text = "Debit", Value = "D" }
    };

    SelectList categoriesComboBox = new SelectList(Model.Categories, "Id", "Name", "Type", new { });
    SelectList accountsComboBox = new SelectList(Model.Accounts, "Id", "Name", "AccountType", new { });
    SelectList subcategoriesComboBox = new SelectList(Model.Subcategories, "Id", "Name", "Category.Name", new { });
    SelectList movementStatusComboBox = new SelectList(Enum.GetNames(typeof(MovementStatus)));
    SelectList projectsComboBox = new SelectList(Model.Projects, "Id", "Name", new { });
    SelectList creditCardsComboBox = new SelectList(Model.CreditCards, "Id", "Name", new { });
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Title
            <small>Add a new movement</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href=""><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="@Url.Action("Index", "Movements")">Movements</a></li>
            <li class="active">@ViewBag.Title</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <!-- projects-box -->
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Projects</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Project</th>
                                        <th>Budget</th>
                                        <th>Balance</th>
                                        <th>Left budget</th>
                                        <th>Budget used (%)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var project in Model.Projects)
                                    {
                                        <tr>
                                            <td>@project.Name</td>
                                            <td>@project.Budget.GetValueOrDefault().ToString("F2")</td>
                                            <td>@project.ProjectBalance.ToString("F2")</td>
                                            <td>@project.LeftBudget.ToString("F2")</td>
                                            <td>
                                                @{ var projectBudgetUsedPercentage = Math.Round(project.BudgetUsedPercentage, 2); }
                                                <div class="progress progress-xs" title="@projectBudgetUsedPercentage%">
                                                    <div class="progress-bar progress-bar-danger" style="width: @Math.Ceiling(projectBudgetUsedPercentage)%"></div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- /.projects-box -->
            </div>
        </div>

        <div class="row">
            <div class="col-md-9">
                <!-- box -->
                <div class="box box-default">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-11">
                                <form role="form" action="@Url.Action("New", "Movements")" method="post">
                                    <span class="text-red">@Html.ValidationSummary()</span>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Movement.Description)
                                        @Html.TextBoxFor(m => m.Movement.Description, new { Class = "form-control" })
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.Type)
                                                @Html.DropDownListFor(m => m.Movement.Type, movementTypeComboBox, new { Class = "selectpicker form-control form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.InclusionDate)
                                                @Html.TextBox("Movement.InclusionDate", DateTime.Now.ToShortDateString(), new { Class = "form-control", Readonly = "readonly " })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.AccountingDate)
                                                @Html.TextBoxFor(m => m.Movement.AccountingDate, new { Class = "form-control datepicker" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.Value)
                                                @Html.TextBoxFor(m => m.Movement.Value, new { Class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.Increase)
                                                @Html.TextBoxFor(m => m.Movement.Increase, new { Class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.Decrease)
                                                @Html.TextBoxFor(m => m.Movement.Decrease, new { Class = "form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.AccountId)
                                                @Html.DropDownListFor(m => m.Movement.AccountId, accountsComboBox, "(Choose one)", new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.InvoiceId)
                                                @Html.DropDownListFor(m => m.Movement.InvoiceId, creditCardsComboBox, "(Optional)", new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.CategoryId)
                                                @Html.DropDownListFor(m => m.Movement.CategoryId, categoriesComboBox, "(Choose one)", new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.SubcategoryId)
                                                @Html.DropDownListFor(m => m.Movement.SubcategoryId, subcategoriesComboBox, "(Choose one)", new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.ProjectId)
                                                @Html.DropDownListFor(m => m.Movement.ProjectId, projectsComboBox, "(Optional)", new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Movement.MovementStatus)
                                                @Html.DropDownListFor(m => m.Movement.MovementStatus, movementStatusComboBox, new { Class = "selectpicker form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Movement.Observation)
                                        @Html.TextAreaFor(m => m.Movement.Observation, new { Class = "form-control" })
                                    </div>

                                    @Html.AntiForgeryToken()

                                    <button type="submit" class="btn btn-success btn-flat pull-left"><i class="fa fa-check"></i> Confirm</button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>

            <div class="col-md-3">
                <!-- accounts-box -->
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Accounts balance</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Account</th>
                                    <th>Balance</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var account in Model.Accounts)
                                {
                                    <tr>
                                        <td>@account.Name</td>
                                        @if (account.Balance < 0)
                                        {
                                            <td class="text-red">@account.Balance.ToString("F2")</td>
                                        }
                                        else
                                        {
                                            <td class="text-green">@account.Balance.ToString("F2")</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- /.accounts-box -->
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
